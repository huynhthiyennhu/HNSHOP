@{
    ViewBag.Title = "Trò Chuyện";
    var conversations = ViewBag.Conversations as List<HNSHOP.Models.Conversation>;
    int? selectedConversationId = ViewBag.ConversationId as int?;
    var senderRole = ViewBag.SenderRole as string;
    int? senderId = ViewBag.SenderId as int?;
    var messages = ViewBag.Messages as List<HNSHOP.Models.Message>;
    var selectedConvo = conversations?.FirstOrDefault(c => c.Id == selectedConversationId);

    string receiverName = senderRole == "Customer"
        ? selectedConvo?.Shop?.Name ?? "Shop"
        : selectedConvo?.Customer?.Name ?? "Khách";

    string receiverAvatar = senderRole == "Customer"
        ? selectedConvo?.Shop?.Account?.Avatar ?? "default.png"
        : selectedConvo?.Customer?.Account?.Avatar ?? "default.png";

    int? conversationIdDangXoa = ViewBag.ConversationId as int?;
    if (!conversations.Any(c => c.Id == conversationIdDangXoa))
    {
        conversationIdDangXoa = null;
    }
}
<style>
    .chat-container {
        display: flex;
        min-height: 70vh;
        background: #f8fafc;
        border-radius: 18px;
        box-shadow: 0 2px 18px 0 #f1e0ba85;
        overflow: hidden;
        margin-bottom: 40px;
    }

    .sidebar-chat {
        background: #fefaef;
        border-right: 1.5px solid #ffe6b3;
        min-width: 265px;
        max-width: 320px;
        overflow-y: auto;
        padding: 18px 0 0 0;
    }

        .sidebar-chat h4 {
            margin-bottom: 18px;
            font-size: 1.53rem;
            font-weight: 600;
            color: #d89e2b;
            letter-spacing: .2px;
            padding-left: 16px;
        }

        .sidebar-chat .table {
            margin-bottom: 0;
        }

            .sidebar-chat .table tr {
                transition: background 0.16s;
                cursor: pointer;
            }

                .sidebar-chat .table tr:hover, .sidebar-chat .table tr.active {
                    background: #fff2cc !important;
                }

    .chat-avatar {
        width: 42px;
        height: 42px;
        border-radius: 50%;
        object-fit: cover;
        border: 2px solid #ffbe76;
        background: #fff;
        margin-right: 7px;
    }

    .chat-main {
        flex-grow: 1;
        display: flex;
        flex-direction: column;
        min-height: 520px;
        padding: 0;
    }

    .chat-header {
        display: flex;
        align-items: center;
        gap: 15px;
        padding: 17px 30px 12px 25px;
        background: #fff7e2;
        border-bottom: 1.5px solid #f8e3bc;
        border-radius: 0 0 18px 18px;
        min-height: 70px;
    }

        .chat-header h4 {
            margin-bottom: 0;
            font-weight: 600;
            color: #b17511;
            font-size: 1.53rem;
            letter-spacing: .1px;
        }

    .chat-messages {
        background: #f7fafd;
        padding: 24px 30px 16px 24px;
        flex-grow: 1;
        overflow-y: auto;
        min-height: 350px;
        max-height: calc(100vh - 260px);
    }

    .message-row {
        display: flex;
        align-items: flex-end;
        margin-bottom: 14px;
    }

        .message-row.right {
            justify-content: flex-end;
        }

    .message-bubble {
        max-width: 68%;
        padding: 13px 18px 11px 17px;
        border-radius: 22px;
        box-shadow: 0 2px 7px #f1e9b96b;
        position: relative;
        font-size: 1.53rem;
        word-break: break-word;
        line-height: 1.5;
        border: 1px solid #f3e1b5;
        min-width: 42px;
        word-break: break-word;
    }

        .message-bubble.sender {
            background: #e6ffe8;
            color: #026f3c;
            border-bottom-right-radius: 7px;
            border: 1.5px solid #cdecc8;
        }

        .message-bubble.receiver {
            background: #fffbea;
            color: #2e2e2e;
            border-bottom-left-radius: 7px;
            border: 1.5px solid #ffe5a5;
        }

        .message-bubble img {
            max-width: 220px;
            border-radius: 12px;
            box-shadow: 0 2px 12px #f4c36a42;
            display: block;
            margin-bottom: 3px;
        }

    .message-meta {
        font-size: 0.92em;
        color: #7b7b7b;
        margin-top: 7px;
        text-align: right;
    }

    .chat-footer {
        border-top: 1.5px solid #ffe2b5;
        background: #fff;
        padding: 15px 18px;
        border-radius: 0 0 18px 18px;
        box-shadow: 0 -2px 12px #fff3c6;
        display: flex;
        gap: 10px;
        align-items: center;
    }

        .chat-footer input {
            border-radius: 20px !important;
            border: 1px solid #f8d396;
            padding: 10px 16px;
            outline: none;
            font-size: 1.5rem;
            background: #fcfaf3;
        }

        .chat-footer button {
            border-radius: 50%;
            margin-left: 5px;
            font-size: 1.61rem;
            padding: 9px 15px;
            background: #ffd35c;
            color: #a27310;
            border: none;
            transition: background .13s;
        }

            .chat-footer button:hover {
                background: #ffe391;
                color: #de950f;
            }
    @@media (max-width: 991px) {
        .chat-container

    {
        flex-direction: column;
    }

    .sidebar-chat {
        min-width: 100%;
        max-width: none;
        border-right: none;
        border-bottom: 1.5px solid #ffe6b3;
    }

    .chat-main {
        min-height: 350px;
    }

    .chat-header, .chat-messages, .chat-footer {
        padding-left: 13px;
        padding-right: 13px;
    }

    }
</style>

<section id="cart_items">
    <div class="container p-0 p-md-4">
        <div class="breadcrumbs pt-3 pb-0">
            <ol class="breadcrumb">
                <li><a asp-controller="Home" asp-action="Index">Home</a></li>
                <li class="active">Trò Chuyện</li>
            </ol>
        </div>
        <div class="chat-container mt-2">
            <!-- SIDEBAR -->
            <div class="sidebar-chat">
                <h4>Trò Chuyện Gần Đây</h4>
                <table class="table table-borderless">
                    <tbody>
                        @foreach (var convo in conversations)
                        {
                            string name = senderRole == "Customer" ? convo.Shop?.Name ?? "Shop" : convo.Customer?.Name ?? "Khách";
                            string avatar = senderRole == "Customer"
                            ? convo.Shop?.Account?.Avatar ?? "default.png"
                            : convo.Customer?.Account?.Avatar ?? "default.png";
                            string action = senderRole == "Customer" ? "WithShop" : "WithCustomer";
                            object routeValues = senderRole == "Customer"
                            ? new { shopId = convo.ShopId }
                            : new { customerId = convo.CustomerId };
                            bool isActive = convo.Id == selectedConversationId;

                            <tr class="align-middle @(isActive ? "active" : "")">
                                <td style="width: 52px;">
                                    <img src="~/images/hnshop/avatar/@avatar" class="chat-avatar" />
                                </td>
                                <td>
                                    <a href="@Url.Action(action, "Chat", routeValues)"
                                       class="fw-semibold text-decoration-none text-dark" style="color:#ad720e">
                                        @name
                                    </a>
                                </td>
                                <td class="text-end" style="width: 40px;">
                                    <form method="post"
                                          asp-action="DeleteConversation"
                                          asp-controller="Chat"
                                          asp-route-conversationId="@convo.Id"
                                          onsubmit="return confirm('Bạn có chắc muốn xoá không?');"
                                          style="display: inline;">
                                        <button type="submit" class="btn btn-sm btn-light" title="Xoá cuộc trò chuyện">
                                            <i class="fa fa-trash"></i>
                                        </button>
                                    </form>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <!-- CHAT MAIN -->
            <div class="chat-main">
                @if (conversationIdDangXoa != null)
                {
                    <!-- HEADER -->
                    <div class="chat-header">
                        <img src="~/images/hnshop/avatar/@receiverAvatar"
                             alt="Avatar"
                             style="width: 50px; height: 50px; border-radius: 50%; object-fit: cover;" />
                        <h4 class="mb-0">@receiverName</h4>
                    </div>
                    <!-- MESSAGES -->
                    <div id="chatMessages" class="chat-messages">
                        @foreach (var msg in messages)
                        {
                            bool isMine = msg.SenderRole == senderRole && msg.SenderId == senderId;
                            var rowClass = isMine ? "message-row right" : "message-row";
                            var bubbleClass = isMine ? "message-bubble sender" : "message-bubble receiver";
                            var avatar = msg.SenderRole == "Customer"
                            ? msg.Conversation.Customer?.Account?.Avatar
                            : msg.Conversation.Shop?.Account?.Avatar;
                            <div class="@rowClass">
                                @if (!isMine)
                                {
                                    <img src="~/images/hnshop/avatar/@(avatar ?? "default.png")" class="chat-avatar mr-2" />
                                }
                                <div class="@bubbleClass">
                                    @if (msg.Content != null && (
                                   msg.Content.EndsWith(".jpg") || msg.Content.EndsWith(".jpeg") ||
                                   msg.Content.EndsWith(".png") || msg.Content.EndsWith(".gif") ||
                                   msg.Content.EndsWith(".webp")))
                                    {
                                        <img src="@msg.Content" alt="Ảnh" />
                                    }
                                    else
                                    {
                                        <div>@msg.Content</div>
                                    }
                                    <div class="message-meta">@msg.SentAt.ToString("HH:mm")</div>
                                </div>
                                @* @if (isMine) *@
                                @* { *@
                                @*     <img src="~/images/hnshop/avatar/@(avatar ?? "default.png")" class="chat-avatar ml-2" /> *@
                                @* } *@
                            </div>
                        }
                    </div>
                    <!-- FOOTER -->
                    <div class="chat-footer">
                        <input type="text" id="messageInput" class="form-control" placeholder="Nhập tin nhắn..." style="flex: 1;" />
                        <button type="button" class="btn btn-light" onclick="document.getElementById('imageInput').click()" title="Gửi ảnh">
                            <i class="fa fa-image"></i>
                        </button>
                        <input type="file" id="imageInput" accept="image/*" style="display: none;" onchange="uploadImageAndSend()" />
                        <button class="btn btn-warning" onclick="sendMessage()" title="Gửi tin nhắn">
                            <i class="fa fa-paper-plane"></i>
                        </button>
                    </div>
                }
                else
                {
                    <div class="chat-empty-wrapper" style="position:relative; min-height:500px; width:100%; height:500px; border-radius: 18px; overflow: hidden;">
                        <img src="~/images/home/chat_empty.png"
                             style="width:100%; height:100%; object-fit:cover; filter:brightness(1);" />
                        <div style="
                                    position:absolute;
                                    top:0; left:0; right:0; bottom:0;
                                    display:flex;
                                    flex-direction:column;
                                    align-items:center;
                                    justify-content:center;
                                    pointer-events:none;">
                            <h5 class="mt-3"
                                style="color:#fff; font-size:2.26rem; font-weight:bold; text-shadow:0 2px 10px #423838b6;">
                                Chọn một cuộc trò chuyện để bắt đầu nhắn tin
                            </h5>
                        </div>
                    </div>

                }
            </div>
        </div>
    </div>
</section>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
    <script>
        const conversationId = "@selectedConversationId";
        const senderId = parseInt("@senderId");
        const senderRole = "@senderRole";
        // Enter gửi
        $(document).ready(function () {
            $("#messageInput").keypress(function (e) {
                if (e.which === 13 && !e.shiftKey) {
                    e.preventDefault();
                    sendMessage();
                }
            });
        });
        // SignalR
        const connection = new signalR.HubConnectionBuilder().withUrl("/chathub").build();
        connection.on("ReceiveMessage", function (role, id, message, sentAt, avatar, isMine) {
            const chatBox = document.getElementById("chatMessages");
            if (!chatBox) return;
            const alignment = isMine ? "message-row right" : "message-row";
            const bubbleClass = isMine ? "message-bubble sender" : "message-bubble receiver";
            const avatarHtml = !isMine
                ? `<img src='/images/hnshop/avatar/${avatar || "default.png"}' class='chat-avatar mr-2' />`
                : "";
            // const myAvatarHtml = isMine
            //     ? `<img src='/images/hnshop/avatar/${avatar || "default.png"}' class='chat-avatar ml-2' />`
            //     : "";
            const timeText = sentAt
                ? new Date(sentAt).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })
                : new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
            const isImage = message.match(/\.(jpeg|jpg|gif|png|webp)$/i);
            const contentHtml = isImage
                ? `<img src="${message}" alt="Ảnh" style="max-width: 220px; border-radius: 12px;" />`
                : `<div>${message}</div>`;
            // const html = `
            //     <div class="${alignment}">
            //         ${avatarHtml}
            //         <div class="${bubbleClass}">
            //             ${contentHtml}
            //             <div class="message-meta">${timeText}</div>
            //         </div>
            //         ${myAvatarHtml}
            //     </div>`;
            chatBox.insertAdjacentHTML("beforeend", html);
            scrollToBottom();
        });
        connection.start().then(function () {
            if (conversationId) {
                connection.invoke("JoinConversation", conversationId)
                    .catch(err => console.error("❌ JoinConversation lỗi:", err));
                // Đánh dấu đã đọc
                $.post("/Chat/MarkAsRead", { conversationId: conversationId })
                    .done(() => { $('#chatBadge').hide(); });
            }
        }).catch(err => console.error("❌ Kết nối SignalR lỗi:", err));
        function sendMessage() {
            const msg = document.getElementById("messageInput").value.trim();
            if (!msg) return;
            // Hiển thị ngay lập tức
            appendMessageToChatBox(msg, new Date(), true, null); // avatar = null sẽ lấy default
            connection.invoke("SendToConversation", conversationId, senderRole, senderId, msg)
                .catch(err => console.error("❌ Gửi lỗi:", err));
            document.getElementById("messageInput").value = '';
        }
                function scrollToBottom() {
            const chatBox = document.getElementById("chatMessages");
            if (chatBox) chatBox.scrollTop = chatBox.scrollHeight;
        }
        $(document).ready(function () { scrollToBottom(); });
        async function uploadImageAndSend() {
            const fileInput = document.getElementById("imageInput");
            const file = fileInput.files[0];
            if (!file) return;
            const formData = new FormData();
            formData.append("file", file);
            try {
                const response = await fetch("/Chat/UploadImage", { method: "POST", body: formData });
                if (!response.ok) throw new Error("Lỗi upload ảnh");
                const imageUrl = await response.text();
                connection.invoke("SendToConversation", conversationId, senderRole, senderId, imageUrl)
                    .catch(err => console.error("❌ Gửi ảnh lỗi:", err));
                fileInput.value = '';
            } catch (error) { alert(error.message); }
        }
                function appendMessageToChatBox(message, sentAt, isMine, avatar) {
            const chatBox = document.getElementById("chatMessages");
            const alignment = isMine ? "message-row right" : "message-row";
            const bubbleClass = isMine ? "message-bubble sender" : "message-bubble receiver";
            const avatarHtml = !isMine
                ? `<img src='/images/hnshop/avatar/${avatar || "default.png"}' class='chat-avatar mr-2' />`
                : "";
            const timeText = sentAt
                ? new Date(sentAt).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })
                : new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
            const isImage = message.match(/\.(jpeg|jpg|gif|png|webp)$/i);
            const contentHtml = isImage
                ? `<img src="${message}" alt="Ảnh" style="max-width: 220px; border-radius: 12px;" />`
                : `<div>${message}</div>`;
            const html = `
                <div class="${alignment}">
                    ${avatarHtml}
                    <div class="${bubbleClass}">
                        ${contentHtml}
                        <div class="message-meta">${timeText}</div>
                    </div>
                </div>`;
            chatBox.insertAdjacentHTML("beforeend", html);
            scrollToBottom();
        }

    </script>
}
