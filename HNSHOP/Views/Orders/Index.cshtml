@model List<HNSHOP.Dtos.Response.OrderResDto>
@using HNSHOP.Utils.EnumTypes
@using System.Net
@{
    ViewData["Title"] = "Danh Sách Đơn Hàng";

}
<section id="cart_items">
    <div class="container p-5">
        <div class="breadcrumbs">
            <ol class="breadcrumb">
                <li><a asp-controller="Home" asp-action="Index">Home</a></li>
                <li class="active">Danh Sách Đơn Hàng</li>
            </ol>
        </div>
        <section class="category-tab shop-details-tab">
            <div class="container">
                <div class="col-sm-12">
                    <ul class="nav nav-tabs">
                        <li class="active"><a href="#processing" data-toggle="tab">Đang xử lý</a></li>
                        <li><a href="#shipping" data-toggle="tab">Đang giao</a></li>
                        <li><a href="#delivered" data-toggle="tab">Đã giao</a></li>
                        <li><a href="#rating" data-toggle="tab">Chờ đánh giá</a></li>
                        <li><a href="#completed" data-toggle="tab">Hoàn tất</a></li>
                        <li><a href="#cancelled" data-toggle="tab">Đã hủy</a></li>
                    </ul>
                </div>
               

                <div class="tab-content">
                    <div class="tab-pane fade active in" id="processing">
                        @Html.Raw(RenderSubOrders(Model, SubOrderStatus.Pending))
                    </div>
                    <div class="tab-pane fade" id="shipping">
                        @Html.Raw(RenderSubOrders(Model, SubOrderStatus.Shipping))
                    </div>
                    <div class="tab-pane fade" id="delivered">
                        @Html.Raw(RenderSubOrders(Model, SubOrderStatus.Delivered))
                    </div>
                   
                    <div class="tab-pane fade" id="rating">
                        @Html.Raw(RenderSubOrders(Model, SubOrderStatus.Completed, onlyUnrated: true))
                    </div> 
                    <div class="tab-pane fade" id="completed">
                        @Html.Raw(RenderSubOrders(Model, SubOrderStatus.Completed, onlyUnrated: false, onlyRated: true))
                    </div>
                    <div class="tab-pane fade" id="cancelled">
                        @Html.Raw(RenderSubOrders(Model, SubOrderStatus.Cancelled))
                    </div>
                </div>

                @if (TempData["SuccessMessage"] != null)
                {
                    <div class="alert alert-success mt-3">@TempData["SuccessMessage"]</div>
                }
            </div>
        </section>
    </div>
</section>
@section Scripts {
    <script>
        function toggleProducts(id, link) {
        const el = document.getElementById(id)
        if (el.style.display === "none") {
        el.style.display = "block"
        link.innerText = "Ẩn bớt"
        } else {
        el.style.display = "none"
        link.innerText = "Xem tất cả sản phẩm"
        }
        }
    </script>
}
@functions {
    @functions {
        private string RenderSubOrders(
            List<HNSHOP.Dtos.Response.OrderResDto> orders,
            SubOrderStatus filterStatus,
            bool onlyUnrated = false,
            bool onlyRated = false
        )
        {
            var ratedPairs = ViewBag.RatedProductPairs as IEnumerable<dynamic> ?? new List<dynamic>();

            var filteredSubOrders = orders
                .SelectMany(o => o.SubOrders.Select(so => new { Order = o, SubOrder = so }))
                .Where(x =>
                    x.SubOrder.Status == filterStatus
                    // Nếu onlyUnrated: chỉ hiện subOrder còn sản phẩm chưa đánh giá
                    && (!onlyUnrated || x.SubOrder.DetailOrders.Any(d =>
                            d.Product != null &&
                            !ratedPairs.Any(r =>
                                Convert.ToInt32(r.ProductId) == Convert.ToInt32(d.Product.Id)
                                && Convert.ToInt32(r.SubOrderId) == Convert.ToInt32(x.SubOrder.Id)
                            )
                        )
                    )
                    // Nếu onlyRated: chỉ hiện subOrder đã đánh giá hết sản phẩm
                    && (!onlyRated || x.SubOrder.DetailOrders.All(d =>
                            d.Product != null &&
                            ratedPairs.Any(r =>
                                Convert.ToInt32(r.ProductId) == Convert.ToInt32(d.Product.Id)
                                && Convert.ToInt32(r.SubOrderId) == Convert.ToInt32(x.SubOrder.Id)
                            )
                        )
                    )
                )
                .ToList();

            if (!filteredSubOrders.Any())
            {
                return "<p class='text-muted text-center'>Không có đơn hàng nào trong trạng thái này.</p>";
            }

            var html = "";

            foreach (var entry in filteredSubOrders)
            {
                var order = entry.Order;
                var subOrder = entry.SubOrder;
                var modalId = $"confirmModal-{order.Id}-{subOrder.ShopId}";
                var blockId = $"products-{subOrder.Id}";
                string shopName = WebUtility.HtmlEncode(subOrder.ShopName);
                string statusBadge = GetStatusBadge(subOrder.Status);

                bool hasUnrated = subOrder.DetailOrders.Any(d =>
                    d.Product != null &&
                    !ratedPairs.Any(r =>
                        Convert.ToInt32(r.ProductId) == Convert.ToInt32(d.Product.Id)
                        && Convert.ToInt32(r.SubOrderId) == Convert.ToInt32(subOrder.Id)
                    )
                );

                html += "<div class='shop-section mb-4 p-3 border rounded bg-white shadow-sm'>";
                html += $"<h5 class='shop-title mb-3 text-primary font-weight-bold'>🛍 Shop: {shopName}" +
                        $"<small class='ml-2'>  {statusBadge}</small></h5>";

                // Sản phẩm đầu tiên
                var firstProduct = subOrder.DetailOrders.FirstOrDefault(d => d.Product != null);
                if (firstProduct != null)
                {
                    var p = firstProduct.Product;
                    var name = WebUtility.HtmlEncode(p.Name);
                    var img = p.Images?.FirstOrDefault()?.Path ?? "no-image.png";
                    var discount = p.DiscountPercent;
                    var price = p.Price;
                    var finalPrice = price * (1 - (decimal)discount / 100);

                    html += "<table class='table mb-0'>";
                    html += "<tr>";
                    html += $"<td style='width: 70px; border:none;'><img src='/images/hnshop/{img}' class='img-fluid rounded border' style='width:70px;height:70px;object-fit:cover;' /></td>";
                    html += "<td style='vertical-align: top;'>";
                    html += $"<div class='font-weight-bold'>{name}</div>";
                    html += $"<div class='text-muted small'>Đơn giá: {price:N0} VNĐ";
                    if (discount > 0)
                        html += $" <span class='text-danger ml-2'>-{discount:0.#}%</span>";
                    html += $"</div><div class='text-muted small'>Số lượng: {firstProduct.Quantity}</div>";
                    html += $"<div class='text-danger font-weight-bold mt-1'>{(finalPrice * firstProduct.Quantity):N0} VNĐ</div>";
                    html += "</td>";
                    html += "</tr>";
                    html += "</table>";
                }

                // Nút xem tất cả
                if (subOrder.DetailOrders.Count > 1)
                {
                    html += $"<div class='mb-2'><a href='javascript:void(0)' onclick='toggleProducts(\"{blockId}\", this)'>Xem tất cả sản phẩm</a></div>";
                }

                // Danh sách sản phẩm còn lại
                html += $"<div id='{blockId}' style='display:none;'>";
                foreach (var item in subOrder.DetailOrders.Skip(1))
                {
                    var p = item.Product;
                    if (p == null) continue;
                    var name = WebUtility.HtmlEncode(p.Name);
                    var img = p.Images?.FirstOrDefault()?.Path ?? "no-image.png";
                    var discount = p.DiscountPercent;
                    var price = p.Price;
                    var finalPrice = price * (1 - (decimal)discount / 100);

                    html += "<table class='table mb-0'>";
                    html += "<tr>";
                    html += $"<td style='width: 60px; border:none;'><img src='/images/hnshop/{img}' class='img-fluid rounded border' style='width:60px;height:60px;object-fit:cover;' /></td>";
                    html += "<td style='vertical-align: top;'>";
                    html += $"<div class='font-weight-bold'>{name}</div>";
                    html += $"<div class='text-muted small'>Đơn giá: {item.UnitPrice:N0} VNĐ</div>";
                    html += $"<div class='text-muted small'>Số lượng: {item.Quantity}</div>";
                    html += $"<div class='text-danger font-weight-bold mt-1'>{(finalPrice * item.Quantity):N0} VNĐ</div>";
                    html += "</td>";
                    html += "</tr>";
                    html += "</table>";
                }
                html += "</div>";

                // Tổng tiền
                var totalPrice = subOrder.DetailOrders.Sum(i =>
                    (i.Product.Price * (1 - (decimal)i.Product.DiscountPercent / 100)) * i.Quantity);
                html += "</br>";

                html += "<b>";
                html += $"<div class='d-flex justify-content-end mt-2 font-weight-bold'>Tổng tiền shop: <span class='text-danger ml-2'>{totalPrice:N0} VNĐ</span></div>";
                html += "</b>";

                // Hành động
                html += "<div class='text-right mt-3' style='margin-right:50px;'>";
                html += $"<a href='/Orders/Details/{order.Id}' class='btn btn-outline-info btn-sm'>Chi tiết đơn</a> ";

                if (subOrder.Status == SubOrderStatus.Completed && hasUnrated)
                {
                    html += $"<a href='/Ratings/Create?subOrderId={subOrder.Id}' class='btn btn-warning btn-sm ml-2'>Đánh giá</a>";
                }

                if (subOrder.Status == SubOrderStatus.Delivered)
                {
                    html += $@"
                    <button class='btn btn-success btn-sm ml-2' data-toggle='modal' data-target='#{modalId}'>
                        Đã nhận hàng
                    </button>";

                    html += $@"
                    <div class='modal fade' id='{modalId}' tabindex='-1' role='dialog'>
                        <div class='modal-dialog modal-dialog-centered' role='document'>
                            <div class='modal-content rounded-lg shadow' style='border: none;'>
                                <form method='post' action='/Orders/ConfirmReceived/{order.Id}?subOrderId={subOrder.Id}'>
                                    <div class='modal-header border-bottom-0 pb-0'>
                                        <h5 class='modal-title font-weight-bold' style='color: #264653;'>Xác nhận đã nhận hàng</h5>
                                        <button type='button' class='close' data-dismiss='modal' aria-label='Đóng'>
                                            <span aria-hidden='true' style='font-size: 1.5rem;'>&times;</span>
                                        </button>
                                    </div>
                                    <div class='modal-body text-center pt-2 pb-3'>
                                        <div style='font-size: 1.1rem; margin-bottom: 18px;'>
                                            Bạn chắc chắn đã nhận hàng từ <strong style='color:#f48c06;'>{shopName}</strong>?
                                        </div>
                                    </div>
                                    <div class='modal-footer border-top-0 justify-content-center'>
                                        <button type='button' class='btn btn-outline-secondary px-4 mr-2' data-dismiss='modal'>Hủy</button>
                                        <button type='submit' class='btn px-4' style='background:#f48c06;color:#fff;font-weight:600;border-radius:6px;'>
                                            Xác nhận
                                        </button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>";

                }

                html += "</div></div>";
                html += "<hr/>";
                html += "<br/>";
            }

            return html;
        }
    }


    private string GetStatusBadge(SubOrderStatus status)
    {
        return status switch
        {
            SubOrderStatus.Pending => "<span class='badge badge-warning'>Đang xử lý</span>",
            SubOrderStatus.Shipping => "<span class='badge badge-info'>Đang giao</span>",
            SubOrderStatus.Delivered => "<span class='badge badge-primary'>Đã giao</span>",
            SubOrderStatus.Completed => "<span class='badge badge-success'>Hoàn tất</span>",
            SubOrderStatus.Cancelled => "<span class='badge badge-danger'>Đã hủy</span>",
            _ => "<span class='badge badge-secondary'>Không xác định</span>"
        };
    }
}
