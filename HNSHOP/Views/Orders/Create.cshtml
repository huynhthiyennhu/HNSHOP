@{
    ViewData["Title"] = "Xác Nhận Đặt Hàng";

}
<style>
    .text-danger {
        color: #dc3545;
    }

    .text-truncate {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }
</style>

<section id="cart_items">
    <div class="container">
        <div class="breadcrumbs">
            <ol class="breadcrumb">
                <li><a asp-controller="Home" asp-action="Index">Home</a></li>
                <li class="active">Thanh toán</li>
            </ol>
        </div>

        <div class="row">
            <!-- Bước 1: Địa chỉ giao hàng -->
            <div class="col-md-6">
                <div class="step-one">
                    <h2 class="heading">Bước 1: Chọn địa chỉ giao hàng</h2>
                </div>

                <div class="checkout-options">
                    <h3>Chọn địa chỉ</h3>
                    <p>Bạn có thể chọn địa chỉ có sẵn hoặc thêm địa chỉ mới</p>

                    <select id="addressSelect" class="form-control">
                        <option value="">Chọn địa chỉ có sẵn</option>
                        @if (ViewBag.Addresses != null)
                        {
                            foreach (var address in ViewBag.Addresses as List<HNSHOP.Dtos.Response.AddressResDto>)
                            {
                                <option value="@address.Id">@address.AddressDetail</option>
                            }
                        }
                    </select>

                    <button type="button" class="btn btn-primary mt-2" id="addNewAddressBtn">Nhập địa chỉ mới</button>
                    <div id="newAddressForm" class="mt-2" style="display: none;">
                        <br />
                        <!-- Nhập số điện thoại luôn hiển thị -->
                        <div class="form-group">
                            <input type="text" id="phoneNumber" class="form-control mt-2" placeholder="Số điện thoại người nhận" />
                        </div>

                        <!-- Radio lựa chọn nhập địa chỉ -->
                        <div class="form-group mt-2">
                            <label><strong>Phương thức nhập địa chỉ</strong></label><br />
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="radio" name="addressInputMode" id="structuredAddress" value="structured"  />
                                <label class="form-check-label" for="structuredAddress">Nhập từng phần</label>
                            </div>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="radio" name="addressInputMode" id="manualAddress" value="manual" checked />
                                <label class="form-check-label" for="manualAddress">Nhập tay toàn bộ</label>
                            </div>
                        </div>

                        <!-- Textarea khi chọn nhập toàn bộ -->
                        <textarea id="manualAddressDetail" class="form-control d-none" placeholder="Nhập toàn bộ địa chỉ..."></textarea>

                        <!-- Nhập từng phần -->
                        <div id="structuredFields">
                            <input type="text" id="houseNumber" class="form-control mt-2" placeholder="Số nhà" />

                            <select id="citySelect" class="form-control mt-2">
                                <option value="">Chọn Tỉnh/Thành phố</option>
                            </select>

                            <select id="districtSelect" class="form-control mt-2">
                                <option value="">Chọn Quận/Huyện</option>
                            </select>

                            <select id="wardSelect" class="form-control mt-2">
                                <option value="">Chọn Phường/Xã</option>
                            </select>

                            <select id="streetSelect" class="form-control mt-2">
                                <option value="">Chọn Đường/Phố</option>
                            </select>
                        </div>
                    </div>


                </div>
            </div>

            <!-- Bước 2: Thanh toán -->
            <div class="col-md-6">
                <div class="step-one">
                    <h2 class="heading">Bước 2: Chọn phương thức thanh toán</h2>
                    <div class="payment-options">
                        @* <span><label><input type="radio" name="paymentMethod" value="bank"> Chuyển khoản ngân hàng</label></span> *@
                        <span><label><input type="radio" name="paymentMethod" value="cod"> Thanh toán khi nhận hàng</label></span>
                        <span><label><input type="radio" name="paymentMethod" value="paypal"> PayPal</label></span>
                        <img src="~/images/hnshop/thanhtoan.png" />
                    </div>
                    
                </div>
            </div>
        </div>

        <!-- Bước 3: Kiểm tra sản phẩm -->
        <div class="step-one mt-5">
            <h2 class="heading">Bước 3: Kiểm tra danh sách sản phẩm đặt mua</h2>
        </div>

        @if (ViewBag.GroupedCartItems != null)
        {
            foreach (var group in ViewBag.GroupedCartItems as List<HNSHOP.Dtos.Response.ShopCartGroupDto>)
            {
                <div class="shop-section mb-4 p-3 border rounded">
                    <h4 class="shop-title mb-3 text-primary font-weight-bold">🛍 Shop: @group.ShopName</h4>

                    <div class="table-responsive">
                        <table class="table" style="border-collapse: collapse;">
                            <tbody>
                                @foreach (var item in group.Items)
                                {
                                    <tr data-id="@item.ProductId.ToString()" data-quantity="@item.Quantity.ToString()" class="align-middle border-0">
                                        <td style="width: 100px; border: none;">
                                            <img src="~/images/hnshop/@item.Image"
                                                 class="img-fluid rounded border"
                                                 style="width: 80px; height: 80px; object-fit: cover;" />
                                        </td>


                                        <!-- tên + đơn giá -->
                                        <td style="width: 100%; border: none;">
                                            <div class="font-weight-bold">@item.Name</div>
                                            <div class="text-muted small">Đơn giá: @item.Price.ToString("N0") VNĐ</div>
                                        </td>

                                        <!-- số lượng + tổng -->
                                        <td class="text-right" style="min-width: 130px; border: none;">
                                            <div class="text-muted small">Số lượng: @item.Quantity</div>
                                            <div class="text-danger font-weight-bold">@item.Total.ToString("N0") VNĐ</div>
                                        </td>
                                    </tr>
                                    <tr data-id="@item.ProductId.ToString()" data-quantity="@item.Quantity.ToString()" data-price="@item.Price"></tr>

                                }
                            </tbody>
                        </table>

                    </div>

                    <div class="text-right font-weight-bold mt-2">
                        Tổng tiền:
                        <span class="text-danger">@group.Items.Sum(i => i.Total).ToString("N0") VNĐ</span>
                    </div>
                </div>
                <hr />
            }
        }

        <!-- Tổng thanh toán -->
        <div class="table-responsive cart_info" style="max-width: 400px; margin-left: auto;">
            <table class="table table-condensed total-result">
                <tr>
                    <td>Tổng tiền hàng</td>
                    <td>@ViewBag.Total.ToString("N0") VNĐ</td>
                </tr>
                <tr>
                    <td>Phí vận chuyển</td>
                    <td>Miễn phí</td>
                </tr>
                <tr>
                    <td>Tổng giảm giá</td>
                    <td><span class="text-danger">- @ViewBag.TotalDiscount.ToString("N0") VNĐ</span></td>
                </tr>
                <tr>
                    <td><strong>Tổng thanh toán</strong></td>
                    <input type="hidden" id="finalTotal" value="@ViewBag.FinalTotal" />
                    <td><strong>@ViewBag.FinalTotal.ToString("N0") VNĐ</strong></td>
                </tr>
            </table>
        </div>

        <!-- Nút đặt hàng -->
        <div class="text-center mt-4">
            <a asp-controller="Cart" asp-action="Index" class="btn btn-secondary btn-lg">
                <i class="fa fa-arrow-left"></i> Trở về giỏ hàng
            </a>

            <button type="button" class="btn btn-success btn-lg" id="placeOrderBtn">
                <i class="fa fa-check-circle"></i> Đặt hàng
            </button>
        </div>
        <br />
    </div>
</section>
@section Scripts {
    <script>
        $(document).ready(function () {
            let locations = [];

            // Load danh sách địa phương
            $.getJSON("/json/local.json", function (data) {
                locations = data;
                loadCities();
            });

            function loadCities() {
                $("#citySelect").empty().append('<option value="">Chọn Tỉnh/Thành phố</option>');
                locations.forEach(city => {
                    $("#citySelect").append(`<option value="${city.id}">${city.name}</option>`);
                });
            }

            // Load quận/huyện
            $("#citySelect").change(function () {
                const cityId = $(this).val();
                const city = locations.find(c => c.id === cityId);

                $("#districtSelect").empty().append('<option value="">Chọn Quận/Huyện</option>');
                $("#wardSelect").empty().append('<option value="">Chọn Phường/Xã</option>');
                $("#streetSelect").empty().append('<option value="">Chọn Đường/Phố</option>');

                if (!city) return;
                city.districts.forEach(d => {
                    $("#districtSelect").append(`<option value="${d.id}">${d.name}</option>`);
                });
            });

            // Load phường/xã, đường
            $("#districtSelect").change(function () {
                const cityId = $("#citySelect").val();
                const districtId = $(this).val();
                const city = locations.find(c => c.id === cityId);
                const district = city?.districts.find(d => d.id === districtId);

                $("#wardSelect").empty().append('<option value="">Chọn Phường/Xã</option>');
                $("#streetSelect").empty().append('<option value="">Chọn Đường/Phố</option>');

                if (!district) return;
                district.wards.forEach(w => {
                    $("#wardSelect").append(`<option value="${w.id}">${w.prefix} ${w.name}</option>`);
                });
                district.streets.forEach(s => {
                    $("#streetSelect").append(`<option value="${s.id}">${s.prefix} ${s.name}</option>`);
                });
            });

            // Ẩn form nhập mới nếu chọn địa chỉ cũ
            $("#addressSelect").change(function () {
                if ($(this).val()) {
                    $("#newAddressForm").hide();
                }
            });

            // Hiện/ẩn form nhập địa chỉ mới
            $("#addNewAddressBtn").click(function () {
                $("#newAddressForm").toggle();
                $("#addressSelect").val("");
            });

         $("input[name='addressInputMode']").change(function () {
            const isManual = $(this).val() === "manual";

            if (isManual) {
                $("#manualAddressDetail").removeClass("d-none");
                $("#structuredFields").hide();
                $("#manualAddressDetail").show();
            } else {
                $("#manualAddressDetail").addClass("d-none");
                $("#manualAddressDetail").hide();
                $("#structuredFields").show();

            }
        }).trigger("change");



            // Xử lý đặt hàng
            $("#placeOrderBtn").click(function () {
                const selectedAddressId = $("#addressSelect").val();
                const paymentMethod = $("input[name='paymentMethod']:checked").val();
                let newAddress = null;

                if ($("#newAddressForm").is(":visible")) {
                    const addressMode = $("input[name='addressInputMode']:checked").val();
                    const phone = $("#phoneNumber").val();

                    if (!phone) {
                        alert("Vui lòng nhập số điện thoại.");
                        return;
                    }

                    if (addressMode === "manual") {
                        const fullAddress = $("#manualAddressDetail").val();
                        if (!fullAddress) {
                            alert("Vui lòng nhập đầy đủ địa chỉ.");
                            return;
                        }

                        newAddress = JSON.stringify({
                            AddressDetail: fullAddress,
                            PhoneNumber: phone
                        });
                    } else {
                        const requiredFields = ["#houseNumber", "#districtSelect", "#wardSelect", "#streetSelect", "#citySelect"];
                        for (const field of requiredFields) {
                            if (!$(field).val()) {
                                alert("Vui lòng điền đầy đủ thông tin địa chỉ.");
                                return;
                            }
                        }

                        newAddress = JSON.stringify({
                            HouseNumber: $("#houseNumber").val(),
                            Street: $("#streetSelect option:selected").text(),
                            Ward: $("#wardSelect option:selected").text(),
                            District: $("#districtSelect option:selected").text(),
                            City: $("#citySelect option:selected").text(),
                            PhoneNumber: phone
                        });
                    }
                }

                const cartItems = [];
                $("tr[data-id][data-quantity][data-price]").each(function () {
                    const productId = $(this).data("id");
                    const quantity = $(this).data("quantity");
                    const unitPrice = $(this).data("price");

                    if (!isNaN(productId) && !isNaN(quantity) && !isNaN(unitPrice)) {
                        cartItems.push({
                            ProductId: parseInt(productId),
                            Quantity: parseInt(quantity),
                            UnitPrice: parseFloat(unitPrice)
                        });
                    }
                });


                if (!selectedAddressId && !newAddress) {
                    alert("Vui lòng chọn hoặc nhập địa chỉ giao hàng.");
                    return;
                }

                if (!paymentMethod) {
                    alert("Vui lòng chọn phương thức thanh toán.");
                    return;
                }

                if (cartItems.length === 0) {
                    alert("Giỏ hàng trống!");
                    return;
                }

                const orderData = {
                    AddressId: selectedAddressId || 0,
                    NewAddress: newAddress,
                    PaymentMethod: paymentMethod,
                    DetailOrderReqDtos: cartItems
                };

                $("#placeOrderBtn").prop("disabled", true).text("Đang xử lý...");

                if (paymentMethod === "paypal") {
                    const total = parseFloat($("#finalTotal").val());
                    if (total <= 0) {
                        alert("Tổng tiền phải lớn hơn 0 để thanh toán bằng PayPal.");
                        return;
                    }

                    $.ajax({
                        url: "/Orders/PreparePaypal",
                        type: "POST",
                        contentType: "application/json",
                        data: JSON.stringify(orderData),
                        success: function (res) {
                            if (res.redirectUrl) {
                                window.location.href = res.redirectUrl;
                            } else {
                                alert("Không thể tạo đơn hàng PayPal.");
                            }
                        },
                        error: function (xhr) {
                            alert("Lỗi tạo đơn PayPal: " + xhr.responseText);
                            $("#placeOrderBtn").prop("disabled", false).text("Đặt hàng");
                        }
                    });

                    return;
                }
                 else if (paymentMethod === "bank") {
                    const total = parseFloat($("#finalTotal").val());
                    if (total <= 0) {
                        alert("Tổng tiền phải lớn hơn 0 để thanh toán bằng VNPay.");
                        return;
                    }

                    $.ajax({
                    url: "/Orders/PreparePayment",
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify(orderData),

                    success: function () {
                        const total = parseFloat($("#finalTotal").val());
                        window.location.href = `/Orders/PayWithVnPay?total=${total}`;
                    },
                    error: function (xhr) {
                        alert("Lỗi khi lưu đơn hàng vào session: " + xhr.responseText);
                        $("#placeOrderBtn").prop("disabled", false).text("Đặt hàng");
                    }
                });



                    return;
                }


                // Đặt hàng thường
                $.ajax({
                    url: "/Orders/Create",
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify(orderData),
                    success: function () {
                        alert("Đặt hàng thành công!");
                        window.location.href = "/Orders/Index";
                    },
                    error: function (xhr) {
                        alert("Có lỗi xảy ra khi đặt hàng: " + xhr.responseText);
                        $("#placeOrderBtn").prop("disabled", false).text("Đặt hàng");
                    }
                });
            });
        });
    </script>
}

